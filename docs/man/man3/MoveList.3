.TH "MoveList< N >" 3 "Fri Feb 19 2021" "S.S.E.H.C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MoveList< N >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <move_list\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMoveList\fP ()"
.br
.ti -1c
.RI "void \fBClear\fP ()"
.br
.ti -1c
.RI "void \fBPushBack\fP (\fBCMove\fP mv)"
.br
.ti -1c
.RI "void \fBErase\fP (int index)"
.br
.ti -1c
.RI "void \fBInsert\fP (int index, \fBCMove\fP mv)"
.br
.ti -1c
.RI "\fBCMove\fP \fBback\fP ()"
.br
.ti -1c
.RI "\fBCMove\fP \fBpop_back\fP ()"
.br
.ti -1c
.RI "int \fBsize\fP () const"
.br
.ti -1c
.RI "int \fBbegin\fP () const"
.br
.ti -1c
.RI "bool \fBis_empty\fP () const"
.br
.ti -1c
.RI "\fBCMove\fP \fBoperator[]\fP (int index) const"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<int N>
.br
class MoveList< N >"
List of moves, stored on stack with limited size\&.
.PP
N=256 is probably fine for 100% of use cases and definitely overkill\&.
.PP
Returned by board methods \fBBoard::legal_moves()\fP and others\&.
.PP
Attempts to copy the std::vector API for clarity's sake\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<int N> \fBMoveList\fP< N >::\fBMoveList\fP ()\fC [inline]\fP"
default constructor 
.SH "Member Function Documentation"
.PP 
.SS "template<int N> \fBCMove\fP \fBMoveList\fP< N >::back ()\fC [inline]\fP"
Return the last item in the list\&. 
.SS "template<int N> int \fBMoveList\fP< N >::begin () const\fC [inline]\fP"

.SS "template<int N> void \fBMoveList\fP< N >::Clear ()\fC [inline]\fP"
Sets head pointer to 0, effectively deleting the list\&. 
.SS "template<int N> void \fBMoveList\fP< N >::Erase (int index)\fC [inline]\fP"
Removes an item at index\&. Shifts other items down accordingly\&. 
.SS "template<int N> void \fBMoveList\fP< N >::Insert (int index, \fBCMove\fP mv)\fC [inline]\fP"
Insert an item at index\&. Shifts other items up accordingly\&. 
.SS "template<int N> bool \fBMoveList\fP< N >::is_empty () const\fC [inline]\fP"

.SS "template<int N> \fBCMove\fP \fBMoveList\fP< N >::operator[] (int index) const\fC [inline]\fP"

.SS "template<int N> \fBCMove\fP \fBMoveList\fP< N >::pop_back ()\fC [inline]\fP"
Delete and return last item in the list\&. 
.SS "template<int N> void \fBMoveList\fP< N >::PushBack (\fBCMove\fP mv)\fC [inline]\fP"
adds an element 
.SS "template<int N> int \fBMoveList\fP< N >::size () const\fC [inline]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for S\&.S\&.E\&.H\&.C from the source code\&.
