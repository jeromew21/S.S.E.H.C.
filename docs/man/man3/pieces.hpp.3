.TH "include/game/pieces.hpp" 3 "Mon Feb 22 2021" "S.S.E.H.C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/game/pieces.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'misc/definitions\&.hpp'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBpiece\fP"
.br
.ti -1c
.RI " \fBpiece::colorless\fP"
.br
.ti -1c
.RI " \fBpiece::white\fP"
.br
.ti -1c
.RI " \fBpiece::black\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBpiece::to_colorless\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_empty\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_pawn\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_king\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_knight\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_bishop\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_rook\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "bool \fBpiece::is_queen\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::flip\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::get_pawn\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::get_bishop\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::get_knight\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::get_rook\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::get_queen\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBPieceType\fP \fBpiece::get_king\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBColor\fP \fBoppositeColor\fP (\fBColor\fP color)"
.br
.ti -1c
.RI "\fBColor\fP \fBcolorOf\fP (\fBPieceType\fP piece)"
.br
.ti -1c
.RI "int \fBgetMaterialValue\fP (\fBPieceType\fP piece)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBpiece::colorless::pawn\fP = 0"
.br
.ti -1c
.RI "const int \fBpiece::colorless::knight\fP = 1"
.br
.ti -1c
.RI "const int \fBpiece::colorless::bishop\fP = 2"
.br
.ti -1c
.RI "const int \fBpiece::colorless::rook\fP = 3"
.br
.ti -1c
.RI "const int \fBpiece::colorless::queen\fP = 4"
.br
.ti -1c
.RI "const int \fBpiece::colorless::king\fP = 5"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::white::pawn\fP = (0 << 1)"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::white::knight\fP = (1 << 1)"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::white::bishop\fP = (2 << 1)"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::white::rook\fP = (3 << 1)"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::white::queen\fP = (4 << 1)"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::white::king\fP = (5 << 1)"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::black::pawn\fP = (0 << 1) + 1"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::black::knight\fP = (1 << 1) + 1"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::black::bishop\fP = (2 << 1) + 1"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::black::rook\fP = (3 << 1) + 1"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::black::queen\fP = (4 << 1) + 1"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::black::king\fP = (5 << 1) + 1"
.br
.ti -1c
.RI "const \fBPieceType\fP \fBpiece::EmptyPiece\fP = \-1"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBColor\fP colorOf (\fBPieceType\fP piece)\fC [inline]\fP"
Returns the color (1 or 0) of a piece\&. 
.SS "int getMaterialValue (\fBPieceType\fP piece)"

.SS "\fBColor\fP oppositeColor (\fBColor\fP color)\fC [inline]\fP"
Returns 0 if color is 1 and 1 if color is 0 
.SH "Author"
.PP 
Generated automatically by Doxygen for S\&.S\&.E\&.H\&.C from the source code\&.
