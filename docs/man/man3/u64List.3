.TH "u64List" 3 "Fri Feb 19 2021" "S.S.E.H.C" \" -*- nroff -*-
.ad l
.nh
.SH NAME
u64List
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <bits\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBu64List\fP ()"
.br
.ti -1c
.RI "void \fBAppend\fP (\fBu64\fP value)"
.br
.ti -1c
.RI "void \fBClear\fP ()"
.br
.ti -1c
.RI "int \fBlen\fP () const"
.br
.ti -1c
.RI "\fBu64\fP \fBoperator[]\fP (int index) const"
.br
.in -1c
.SH "Detailed Description"
.PP 
A stack of u64 values, with a length limited to N\&.
.PP
In practice, only to be traversed upwards\&.
.PP
Returned by \fBbitscanAll()\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "u64List::u64List ()\fC [inline]\fP"
The motivation behind this class is that arrays are by default initialized with garbage in C++\&.
.PP
Here we initialize to 0\&. 
.SH "Member Function Documentation"
.PP 
.SS "void u64List::Append (\fBu64\fP value)\fC [inline]\fP"
Add a value to the end of the stack\&. 
.SS "void u64List::Clear ()\fC [inline]\fP"
Clears the stack\&. 
.SS "int u64List::len () const\fC [inline]\fP"
Returns the size of the stack\&. 
.SS "\fBu64\fP u64List::operator[] (int index) const\fC [inline]\fP"
Subscript get by index\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for S\&.S\&.E\&.H\&.C from the source code\&.
